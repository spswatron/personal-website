{
  "ast": null,
  "code": "import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nvar ComixMatch1 = \"/images/Comix-Match-1.png\";\nvar ComixMatch2 = \"/images/Comix-Match-2.png\";\nvar ComixMatch3 = \"/images/Comix-Match-3.png\";\nvar GetBlueno1 = \"/images/Get-Blueno-1.png\";\nvar GetBlueno2 = \"/images/Get-Blueno-2.png\";\nvar GetBlueno3 = \"/images/Get-Blueno-3.png\";\nvar Carpe1 = \"/images/Carpe-1.png\";\nvar Carpe2 = \"/images/Carpe-2.png\";\nvar Carpe3 = \"/images/Carpe-3.png\";\nvar Shell1 = \"/images/Shell-1.png\";\nvar Shell2 = \"/images/Shell-2.png\";\nvar Shell3 = \"/images/Shell-3.png\";\nvar UrsaMinors1 = \"/images/Ursa-Minors-1.png\";\nvar UrsaMinors2 = \"/images/Ursa-Minors-2.png\";\nvar UrsaMinors3 = \"/images/Ursa-Minors-3.png\";\nvar Search1 = \"/images/Search-1.png\";\nvar Search2 = \"/images/Search-2.png\";\nvar Search3 = \"/images/Search-3.png\";\nimport Pager from \"./Page\";\nimport ReactModal from 'react-modal';\nimport Image from 'next/image';\n\nfunction ComixMatchCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Tech pool: \"\n      }), \" flask, pandas, selenium, html, and css\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"Using the powers of selenium and flask, I created a website that contains the information of over seven thousand books from goodreads' shelves.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"This data can be sorted by total reviews, average reviews, random, and other fun things. Goodreads doesn't let its users sort its data by these metrics, but I really wanted to find more comic books to read, so this seemed like the natural conclusion. Learning that everyone loves Calvin and Hobbes was a delightful bonus.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction UrsaMinorsCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Thanks to:\"\n      }), \" react, flask, and the google sheets api\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"After staring at our old weebly site for so long, I obtained the blessing of our presidents and developed a new website for my acapella group.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"The site has a react front-end and a flask back-end for extra shenanigans, like the contact form. I have finished designing the site, but am giving it extra time for the members to fill out a google form with their bios\", \"\\u2014\", \"but when they do, the information on the site will automatically update via the google sheets api. For runtime sake, I'll probably later remove this feature, but for now it's fun.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction CarpeCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Thanks to:\"\n      }), \" react and the world of npm\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"Carpe is a productivity suite I built out as a pick-me-up during quarantine.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"I started with my idea for Elapsify, which starts a stopwatch every time a task is entered. I hoped to ramp up a bit of my stress and productivity (and it worked!). Then I built out Homework Tracker and Message Center as my own special ways of listing those to-dos. Through this personal project, I learned react. Quite fantastic, this library.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction ShellCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Tech crew:\"\n      }), \" c, gdb, and the linux man-pages\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"I remember when I first saw the characters \\\"cd\\\" I was so confused\", \"\\u2014\", \"but that made building this c-based shell clone even more freeing.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"Over the course of this project, I learned to implement the wonders of foreground and background processes, input and output redirection, and of course, command execution. It only takes one \\\"cd\\\" to change everything.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction GetBluenoCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Using: \"\n      }), \" html, css, javascript\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"Here lies a 2048 clone that uses brunonian bears rather than numbers. I don't have much to say here, except that everyone I show this game to plays it for more than 20 minutes.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction SearchCaption(props) {\n  var git = /*#__PURE__*/_jsx(\"a\", {\n    href: props.git,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-github\"\n    })\n  });\n\n  var deploy = /*#__PURE__*/_jsx(\"a\", {\n    href: props.deploy,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsx(\"i\", {\n      className: \"fa fa-link\"\n    })\n  });\n\n  if (props.git === \"\") {\n    git = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  if (props.deploy === \"\") {\n    deploy = /*#__PURE__*/_jsx(_Fragment, {});\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"caption\",\n      children: [/*#__PURE__*/_jsx(\"strong\", {\n        children: \"Introducing:\"\n      }), \" scala, xml, and sbt\"]\n    }), /*#__PURE__*/_jsx(\"br\", {}), \"When life gives you a big XML wikis, I guess you slap a little bit of TF-IDF on it and call it a search engine.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"Using scala and the pagerank algorithm, I implemented a search engine that takes the pages and pages of information in given XML wikis and presents it in the format pictured above. In the process, I focused on time-complexity, space complexity, and of course, (soul) searching.\", /*#__PURE__*/_jsxs(\"div\", {\n      className: \"i row\",\n      children: [git, \" \", deploy]\n    })]\n  });\n}\n\nfunction nextSlide(n) {\n  return (n + 3) % 3;\n}\n\nvar ImageModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImageModal, _React$Component);\n\n  var _super = _createSuper(ImageModal);\n\n  function ImageModal(props) {\n    var _this;\n\n    _classCallCheck(this, ImageModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showModal: false,\n      current: 0\n    };\n    _this.handleOpenModal = _this.handleOpenModal.bind(_assertThisInitialized(_this));\n    _this.handleCloseModal = _this.handleCloseModal.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImageModal, [{\n    key: \"handleOpenModal\",\n    value: function handleOpenModal() {\n      this.setState({\n        showModal: true\n      });\n    }\n  }, {\n    key: \"moveBack\",\n    value: function moveBack() {\n      this.setState({\n        current: nextSlide(this.state.current - 1)\n      });\n    }\n  }, {\n    key: \"moveForward\",\n    value: function moveForward() {\n      this.setState({\n        current: nextSlide(this.state.current + 1)\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var slideImage = this.props.images[this.state.current];\n      var altTag = this.props.alts[this.state.current];\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"image-wrapper\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"project-links\",\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              className: \"not-mobile\",\n              onClick: this.handleOpenModal,\n              children: /*#__PURE__*/_jsx(\"i\", {\n                className: \"fa fa-search-plus\"\n              })\n            }), /*#__PURE__*/_jsx(\"button\", {\n              className: \"mobile\",\n              onClick: this.handleOpenModal,\n              children: /*#__PURE__*/_jsx(\"i\", {\n                className: \"fa fa-info-circle\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(ReactModal, {\n            isOpen: this.state.showModal,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"modal\",\n              children: [/*#__PURE__*/_jsx(\"button\", {\n                className: \"exit\",\n                onClick: this.handleCloseModal,\n                children: /*#__PURE__*/_jsx(\"i\", {\n                  className: \"fa fa-times\"\n                })\n              }), /*#__PURE__*/_jsx(\"h2\", {\n                children: this.props.project\n              }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"img row\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"slideshow arrow\",\n                  children: /*#__PURE__*/_jsx(\"button\", {\n                    onClick: function onClick() {\n                      return _this2.moveBack();\n                    },\n                    children: /*#__PURE__*/_jsx(\"i\", {\n                      className: \"fa fa-chevron-left\"\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"img column\",\n                  children: /*#__PURE__*/_jsx(Image, {\n                    src: slideImage,\n                    width: \"auto\",\n                    height: \"auto\",\n                    alt: \"\",\n                    loading: \"eager\"\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"slideshow arrow\",\n                  children: /*#__PURE__*/_jsx(\"button\", {\n                    onClick: function onClick() {\n                      return _this2.moveForward();\n                    },\n                    children: /*#__PURE__*/_jsx(\"i\", {\n                      className: \"fa fa-chevron-right\"\n                    })\n                  })\n                })]\n              }), this.props.caption]\n            })\n          }), /*#__PURE__*/_jsx(Image, {\n            wrapperClassName: \"project-image-thumbnail\",\n            src: this.props.src,\n            alt: altTag,\n            width: \"auto\",\n            height: \"auto\" // layout = \"responsive\"\n            ,\n            loading: \"lazy\"\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ImageModal;\n}(React.Component);\n\nvar UrsasImage = function UrsasImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    project: \"Ursa Minors Website\",\n    images: [UrsaMinors1, UrsaMinors2, UrsaMinors3],\n    src: UrsaMinors1,\n    deploy: \"https://ursa-minors.ashley-chang.me/index\",\n    git: \"\",\n    caption: /*#__PURE__*/_jsx(UrsaMinorsCaption, {\n      deploy: \"https://ursa-minors.ashley-chang.me/index\",\n      git: \"\"\n    }),\n    alts: [\"Ursa Minors acapella group website landing page with photo of the group\", \"Member Info page for current Ursa Minors\", \"contact form for website\"]\n  });\n};\n\nvar CarpeImage = function CarpeImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    project: \"Carpe\",\n    images: [Carpe1, Carpe2, Carpe3],\n    src: Carpe1,\n    deploy: \"https://carpe.ashley-chang.me/\",\n    git: \"https://github.com/spswatron/carpe\",\n    caption: /*#__PURE__*/_jsx(CarpeCaption, {\n      deploy: \"https://carpe.ashley-chang.me/\",\n      git: \"https://github.com/spswatron/carpe\"\n    }),\n    alts: [\"Carpe website with calendar that tasks can be inputted into and taken out of\", \"Page with\" + \"rich text editor for to-do list messages\", \"Elapsify to-do list that starts a stopwatch for every task entered\"]\n  });\n};\n\nvar GetBluenoImage = function GetBluenoImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    project: \"GetBlueno\",\n    images: [GetBlueno1, GetBlueno2, GetBlueno3],\n    src: GetBlueno1,\n    deploy: \"https://get-blueno.ashley-chang.me/\",\n    git: \"https://github.com/spswatron/get-blueno\",\n    caption: /*#__PURE__*/_jsx(GetBluenoCaption, {\n      deploy: \"https://get-blueno.ashley-chang.me/\",\n      git: \"https://github.com/spswatron/get-blueno\"\n    }),\n    alts: [\"Picture of Brown University bears and president in 2048 clone game\", \"Game Over message with\" + \"even more bears in the margins of the site\", \"Success message for game that says 'You Brought Blueno Back!\"]\n  });\n};\n\nvar ShellImage = function ShellImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    src: Shell1,\n    images: [Shell1, Shell2, Shell3],\n    project: \"Shell\",\n    deploy: \"\",\n    git: \"\",\n    caption: /*#__PURE__*/_jsx(ShellCaption, {\n      deploy: \"\",\n      git: \"\"\n    }),\n    alts: [\"Screen shot of shell clone that executed the banner command as well as foreground and background\" + \"signal handling commands\", \"shell clone with input and output redirection involving usr/bin/calendar\", \"shell clone executing figlet and banner commands\"]\n  });\n};\n\nvar ComixMatchImage = function ComixMatchImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    src: ComixMatch1,\n    images: [ComixMatch1, ComixMatch2, ComixMatch3],\n    project: \"Comix Match\",\n    deploy: \"http://comix-match.ashley-chang.me/\",\n    git: \"https://github.com/spswatron/comix-match\",\n    caption: /*#__PURE__*/_jsx(ComixMatchCaption, {\n      deploy: \"http://comix-match.ashley-chang.me/\",\n      git: \"https://github.com/spswatron/comix-match\"\n    }),\n    alts: [\"Comix Match homepage with comic books sorted from highest \" + \"average rating to lowest\", \"Comix Match with comics sorted by random\", \"Chix match, \" + \"which is just Comix Match for chicklit, with books sorted by total reviews\"]\n  });\n};\n\nvar SearchImage = function SearchImage() {\n  return /*#__PURE__*/_jsx(ImageModal, {\n    src: Search1,\n    images: [Search1, Search2, Search3],\n    project: \"Search\",\n    deploy: \"\",\n    git: \"\",\n    caption: /*#__PURE__*/_jsx(SearchCaption, {\n      deploy: \"\",\n      git: \"\"\n    }),\n    alts: [\"Results of search results for 'rock,' which are Stage, Nirvana, Granite, \" + \"Mountaineering, Kyanite, Men at Work, Jamming, Paleogne, and the Grateful Dead\", \"Results for for 'chocolate,' which are Pan flute, Malvales, Matzo, Merlot, Mandy Patinkin,\" + \"Cuisine of the Midwestern United States, History of the Faroe Islands, Milk, Pennsylvania, and Lavender\", \"Results for 'california' search and a bit of the 'texas' search\"]\n  });\n};\n\nvar ImageList = [/*#__PURE__*/_jsx(ComixMatchImage, {}, 1), /*#__PURE__*/_jsx(UrsasImage, {}, 2), /*#__PURE__*/_jsx(CarpeImage, {}, 3), /*#__PURE__*/_jsx(ShellImage, {}, 4), /*#__PURE__*/_jsx(GetBluenoImage, {}, 5), /*#__PURE__*/_jsx(SearchImage, {}, 6)];\n\nvar Core = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Core, _React$Component2);\n\n  var _super2 = _createSuper(Core);\n\n  function Core(props) {\n    var _this3;\n\n    _classCallCheck(this, Core);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      current: false\n    };\n    return _this3;\n  }\n\n  _createClass(Core, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Projects\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: ImageList\n        })]\n      });\n    }\n  }]);\n\n  return Core;\n}(React.Component);\n\nvar Projects = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Projects, _React$Component3);\n\n  var _super3 = _createSuper(Projects);\n\n  function Projects() {\n    _classCallCheck(this, Projects);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Projects, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(Pager, {\n        id: \"projects\",\n        content: /*#__PURE__*/_jsx(Core, {})\n      });\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
